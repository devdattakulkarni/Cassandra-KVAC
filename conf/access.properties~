# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is a sample access file for SimpleAuthority. The format of this file
# is KEYSPACE[.COLUMNFAMILY].PERMISSION=USERS, where:
#
# * KEYSPACE is the keyspace name.
# * COLUMNFAMILY is the column family name.
# * PERMISSION is one of <ro> or <rw> for read-only or read-write respectively.
# * USERS is a comma delimited list of users from passwd.properties.
# 
# See below for example entries.

# NOTE: This file contains potentially sensitive information, please keep
# this in mind when setting its mode and ownership.

# The magical '<modify-keyspaces>' property lists users who can modify the
# list of keyspaces: all users will be able to view the list of keyspaces.
<modify-keyspaces>=jsmith

# Access to Keyspace1 (add/remove column families, etc).
Keyspace1.<ro>=jsmith,Elvis Presley
Keyspace1.<rw>=dilbert

# Access to Standard1 (keyspace Keyspace1)
Keyspace1.Standard1.<rw>=jsmith,Elvis Presley,dilbert

# Specifying permissions based on roles
# <ROLE>.<PERMISSION>=KEYSPACE[.COLUMNFAMILY].COLUMN
Friend.<r>=Keyspace1.Standard1
Owner.<rw>=Keyspace1.Standard1
# Specifying users' memberships in groups
# We need a separate interface to add/remove users from the groups
# <User>=<Role>
jsmith=Friend

# Key-value Access Control Model
# permission_activation_constraint resource_expression operator selector_predicate
#
# permission_activation_constraint := current_time in expression
# resource_expression := /keyspace/column_family/row_key/column_key
# resource_expression := /keyspace/column_family//column_key
# resource_expression := "parent/child" --> check for immediate child of the parent.
# resource_expression := "parent//child" --> check for child at any depth under the parent.

# operator := where | in

# selector_predicate := resource_expression operator resource_expression

# Requirement R1
//Patient=//Patient where //Patient/id in //Doctor/id=thisUser.id/curr_patients

 

